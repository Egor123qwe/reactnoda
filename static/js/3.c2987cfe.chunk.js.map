{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/UserImage/UserImage.jsx","components/Profile/ProfileInfo/Status/StatuHook.jsx","components/Profile/ProfileInfo/ProfileInfoForm/ProfileInfoForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","HOC/withRouter.jsx","components/Profile/ProfileInfo/ProfileInfoContainer.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostConteiner.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","HOC/withRedirect.jsx","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","profile","item","ProfileImage","props","_useState","useState","_useState2","Object","slicedToArray","SetProfileImage","useEffect","ProfilePhoto","react_default","a","createElement","className","s","ProfileInfo","alt","src","UserId","String","MyId","onChange","e","SetProfileImageThunk","target","files","OnSelectPhoto","type","Fragment","Status","EditMode","SetEditMode","_useState3","status","_useState4","SetStatus","currentTarget","value","autoFocus","onBlur","UpdateStatus","onDoubleClick","validate","values","ProfileInfoForm","formik","useFormik","initialValues","NikName","lookingForAJob","LookingForAJobDescription","description","Vk","GitHub","onSubmit","data","userId","FullName","AboutMe","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","SetProfileInfoThunk","LoginForm","handleSubmit","info","onClick","id","handleChange","ProfileInfoData","fullName","StatuHook","VkLink","GitHubLink","Preloader","UserImage","ProfileInfoForm_ProfileInfoForm","withRouter","Component","location","useLocation","navigate","useNavigate","params","useParams","assign","router","ProfileInfoAPI","this","GetUserThunk","GetStatus","PrevProps","UrlId","ProfileInfo_ProfileInfo","React","ProfileinfoContainer","connect","state","ProfilePage","Auth","Url","UserIdInURL","Post","text","errors","lengthEmailControl","lengthControl","PostText","AddPostForm","AddPost","error","name","errorMessage","submitButton","MyPosts","PostsElement","PostsData","map","Post_Post","Addposts","MyPosts_AddPostForm","posts","MyPostConteiner","Profile","ProfileInfoContainer","MyPosts_MyPostConteiner","compose","WithRedirect","Profile_Profile","react_redux__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","isAuth","to","textarea"],"mappings":"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","file":"static/js/3.c2987cfe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1ni5C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3xHLe\"};","import s from '../ProfileInfo.module.css'\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction ProfileImage(props) {\n\n    let [ProfileImage, SetProfileImage] = useState('')\n\n    function OnSelectPhoto(e) {\n        props.SetProfileImageThunk(e.target.files[0])\n    }\n\n    useEffect(() => {\n        SetProfileImage(props.ProfilePhoto)\n    }, [props.ProfilePhoto])\n\n    return (\n        <div className={s.ProfileInfo}>\n            <img alt='' src={ProfileImage} />\n            { (props.UserId === String(props.MyId)) ? \n                <div>\n                    <input onChange={(e) => OnSelectPhoto(e)} type=\"file\"/>\n                </div>\n             : <></>}\n        </div>\n      );\n}\n\nexport default ProfileImage;","import s from '../ProfileInfo.module.css'\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\nfunction Status(props) {\n\n    let [EditMode, SetEditMode] = useState(false)\n    let [Status, SetStatus] = useState(props.status)\n\n    function DisableEdit() {\n        SetEditMode(false)\n        props.UpdateStatus(Status)\n    }\n    function EnableEdit() {\n        if (props.UserId === String(props.MyId)) {\n            SetEditMode(true)\n        }\n    }\n\n    useEffect(() => { SetStatus(props.status) }, [props.status])\n\n    function OnChange(e) {\n        SetStatus(e.currentTarget.value)\n    }\n\n        return (\n            <div className={s.status}>\n                {\n                    EditMode ? \n                        <input onChange={OnChange} autoFocus={true} onBlur={DisableEdit} value={Status}></input> : \n                        <span onDoubleClick={EnableEdit}>{Status ? Status : '-----'}</span>\n                }\n            </div>\n        )\n}\n\nexport default Status;","import s from '../ProfileInfo.module.css'\nimport Status from '../Status/StatuHook';\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\n\nconst validate = values => {\n    const errors = {};\n\n    //let lengthEmailControl = lengthControl(40)\n    //if (lengthEmailControl(values.email)) { errors.email = lengthEmailControl(values.email) }\n  \n    //let lengthPasswordControl = lengthControl(15)\n    //if (lengthPasswordControl(values.Password)) { errors.Password = lengthPasswordControl(values.Password) }\n  \n    return errors;\n};\n\nfunction ProfileInfoForm(props) {\n\n    let [EditMode, SetEditMode] = useState(false)\n\n    function OnEnableMode() {\n        SetEditMode(true)\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            NikName: '',\n            lookingForAJob: false,\n            LookingForAJobDescription: '',\n            description: '',\n            Vk: '',\n            GitHub: ''\n        },\n        validate,\n        onSubmit: (values) => {\n            SetEditMode(false)\n\n            let data = {\n                userId: props.MyId,\n                lookingForAJob: values.lookingForAJob,\n                LookingForAJobDescription: values.LookingForAJobDescription,\n                FullName: values.NikName,\n                AboutMe: values.description,\n                contacts: {\n                    github: values.GitHub,\n                    vk: values.Vk,\n                    facebook: '',\n                    instagram: '',\n                    twitter: '',\n                    website: '',\n                    youtube: '',\n                    mainLink: '',\n                }\n            }\n\n            props.SetProfileInfoThunk(data)\n        },\n    });\n\n    return (\n            <form className={s.LoginForm} onSubmit={formik.handleSubmit}>\n                <div className={s.info}>\n                    {!EditMode ? <button type=\"button\" onClick={ OnEnableMode }>Edit</button> : <></>}\n                    {EditMode ? <button type=\"submit\">Save</button> : <></>}\n\n                    { EditMode ? \n                        <div><span>Name: <input id='NikName' type=\"NikName\" onChange={formik.handleChange} value={formik.values.NikName}/></span></div> : \n                        <div className={s.NikName}>{props.ProfileInfoData.fullName}</div>}\n\n                    <Status MyId={props.MyId} UserId={props.UserId} UpdateStatus={props.UpdateStatus} status={props.ProfileInfoData.status} />\n\n                    { EditMode ? \n                        <div><span>looking for a job: <input id='lookingForAJob' type=\"checkbox\" onChange={formik.handleChange} value={formik.values.lookingForAJob}/></span></div> : \n                        <div>looking for a job: <span className={s.lookingForAJob}>{formik.values.lookingForAJob ? 'yes' : 'no' }</span></div>}\n\n                    { EditMode ? \n                        <div><span>looking for a job description: <input id='LookingForAJobDescription' type=\"LookingForAJobDescription\" onChange={formik.handleChange} value={formik.values.LookingForAJobDescription}/></span></div> : \n                        <div>looking for a job description: <span className={s.LookingForAJobDescription}></span></div>}\n\n                    { EditMode ? \n                        <div><span>About me: <input id='description' type=\"description\" onChange={formik.handleChange} value={formik.values.description}/></span></div> : \n                        <div>About me: <span className={s.description}>{props.ProfileInfoData.description}</span></div>}\n\n                    <div>Contacts: \n                        <div>\n                            { EditMode ? \n                                <div><span>Vk: <input id='Vk' type=\"Contacts\" onChange={formik.handleChange} value={formik.values.Vk}/></span></div> : \n                                <div>Vk: <span className={s.VkLink}></span></div>}\n                            { EditMode ? \n                                <div><span>Git Hub: <input id='GitHub' type=\"Contacts\" onChange={formik.handleChange} value={formik.values.GitHub}/></span></div>  : \n                                <div>Git Hub: <span className={s.GitHubLink}></span></div>}\n                        </div>\n                    </div>\n\n                </div>\n            </form>\n      );\n}\n\nexport default ProfileInfoForm;","import s from './ProfileInfo.module.css'\nimport Preloader from '../../Common/Preloader/Preloader';\nimport React from 'react';\nimport ProfileImage from './UserImage/UserImage';\nimport ProfileInfoForm from './ProfileInfoForm/ProfileInfoForm';\n\nfunction ProfileInfo(props) {\n    return (\n        <div className={s.ProfileInfo}>\n            <div className={s.info}>\n                {props.ProfileInfoData.Preloader ? <Preloader/> : <></>}\n                <ProfileImage MyId={props.MyId} UserId={props.UserId} SetProfileImageThunk={props.SetProfileImageThunk} \n                              ProfilePhoto={props.ProfileInfoData.ProfilePhoto}/>\n                <ProfileInfoForm SetProfileInfoThunk={props.SetProfileInfoThunk} ProfileInfoData={props.ProfileInfoData} \n                                 MyId={props.MyId} UserId={props.UserId} UpdateStatus={props.UpdateStatus}/>\n            </div>\n        </div>\n      );\n}\n\nexport default ProfileInfo;","import { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport React from 'react';\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component {...props} router={{ location, navigate, params }} />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n\nexport default withRouter;","import { connect } from 'react-redux';\nimport ProfileInfo from './ProfileInfo';\nimport React from \"react\";\nimport { GetUserThunk, GetStatus, UpdateStatus, SetProfileImageThunk, SetProfileInfoThunk } from '../../../redux/ProfileReducer';\nimport withRouter from '../../../HOC/withRouter';\n\nclass ProfileInfoAPI extends React.Component {\n\n    componentDidMount() {\n        this.props.GetUserThunk( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n        this.props.GetStatus( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n    }\n\n    componentDidUpdate(PrevProps) {\n        if (PrevProps.UrlId !== this.props.UrlId) {\n            this.props.GetUserThunk( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n            this.props.GetStatus( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n        }\n    }\n\n    render() {\n        return (<ProfileInfo MyId={this.props.MyId} UserId={this.props.router.params.userId} \n                             UpdateStatus={this.props.UpdateStatus} ProfileInfoData={this.props.ProfileInfoData}\n                             SetProfileImageThunk={this.props.SetProfileImageThunk} SetProfileInfoThunk={this.props.SetProfileInfoThunk}/>)\n    }\n} \n\nfunction MapStateToProps(state) {\n    return {\n        ProfileInfoData: state.ProfilePage.ProfileInfoData,\n        MyId: state.Auth.Auth.id,\n        UrlId: state.Url.UserIdInURL.id,\n    }\n}\n\nlet ProfileinfoContainer = connect(MapStateToProps, { GetUserThunk, GetStatus, UpdateStatus, SetProfileImageThunk, SetProfileInfoThunk })(withRouter(ProfileInfoAPI))\n\nexport default ProfileinfoContainer","import s from './Post.module.css';\nimport React from 'react';\n\nfunction Post(props) {\n    return (\n        <div className={s.item}>\n            <img alt='' src=\"https://i.pinimg.com/736x/18/ca/6f/18ca6f28ec97d6afb3117d4b6aece2e6.jpg\"/>\n            {props.text}\n        </div>\n      );\n}\n\nexport default Post;","import s from './MyPosts.module.css';\nimport React from 'react';\nimport { lengthControl } from '../../../utils/TextAreaUtils';\nimport { useFormik } from 'formik';\n\n\nconst validate = values => {\n    const errors = {};\n\n    let lengthEmailControl = lengthControl(40)\n    if (lengthEmailControl(values.PostText)) { errors.PostText = lengthEmailControl(values.PostText) }\n  \n    return errors;\n};\n\n\nconst AddPostForm = (props) => {\n\n    const formik = useFormik({\n        initialValues: {\n            PostText: '',\n        },\n        validate,\n        onSubmit: values => {\n            props.AddPost(values.PostText)\n            values.PostText = ''\n        },\n    });\n\n    return (\n        <form className={s.AddPostForm} onSubmit={formik.handleSubmit}>\n            <div className={s.AddPost}>\n                <span className={formik.errors.PostText ? s.error : s.PostText}><input name=\"PostText\" id='PostText' type=\"PostText\" onChange={formik.handleChange} value={formik.values.PostText}/></span>\n                {formik.errors.PostText ? <div className={s.errorMessage}>{formik.errors.PostText}</div> : null}\n            </div>\n            <button className={s.submitButton} type=\"submit\">Add Post</button>\n        </form>\n    );\n};\n\nexport default AddPostForm;","import s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport React from 'react';\nimport AddPostForm from './AddPostForm';\n\n\nfunction MyPosts(props) {\n\n    let PostsElement = props.ProfilePage.PostsData.map( e => <Post text={e.text} id={e.id}/>)\n\n    return (\n        <div className={s.MyPosts}>\n            <div className={s.Addposts}>\n                <AddPostForm AddPost={props.AddPost}/>\n            </div>\n            <div className={s.posts}>\n                {PostsElement}\n            </div>\n            \n        </div>\n      );\n}\n\nexport default MyPosts;","import { AddPost } from '../../../redux/ProfileReducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToProps = (state) => {\n\treturn { \n\t\tProfilePage : state.ProfilePage \n\t}\n}\n\nlet MyPostConteiner = connect(mapStateToProps, {AddPost})(MyPosts);\n\nexport default MyPostConteiner;\n\n","import s from './Profile.module.css';\nimport ProfileinfoContainer from './ProfileInfo/ProfileInfoContainer';\nimport MyPostConteiner from './MyPosts/MyPostConteiner';\nimport React from 'react';\n\n\nfunction Profile(props) {\n    return (\n        <div className={s.profile}>\n            <ProfileinfoContainer />\n            <MyPostConteiner />\n        </div>\n      );\n}\n\n\nexport default Profile","import React from 'react';\nimport { compose } from 'redux';\nimport Profile from './Profile';\nimport WithRedirect from '../../HOC/withRedirect';\nimport withRouter from '../../HOC/withRouter';\nimport { connect } from 'react-redux';\n\n\nfunction ProfileContainer() {\n\n    return (\n        <Profile />\n      );\n}\n\nfunction MapStateToProps(state) {\n  return {}  \n}\n\nexport default compose(WithRedirect, connect(MapStateToProps, {}))(withRouter(ProfileContainer))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__3mJj3\",\"info\":\"ProfileInfo_info__2VCz4\",\"NikName\":\"ProfileInfo_NikName__2XfWG\",\"status\":\"ProfileInfo_status__39MEO\",\"description\":\"ProfileInfo_description__1F5b4\"};","import { connect } from 'react-redux';\nimport React from \"react\";\nimport { Navigate } from 'react-router-dom';\n\nfunction WithRedirect(Component) {\n    function ComponentWithRouter(props) {\n        if(!props.isAuth) {\n            return <Navigate to='/login' />\n        }\n        else {\n            return <Component {...props}/>\n        }\n    }\n\n    function MapStateToProps(state) {\n        return {\n            isAuth : state.Auth.Auth.isAuth\n        }\n    }\n\n    let ComponentWithRouterProps = connect(MapStateToProps)(ComponentWithRouter)\n\n    return ComponentWithRouterProps\n}\n\nexport default WithRedirect","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"MyPosts_textarea__3JGmV\",\"errorMessage\":\"MyPosts_errorMessage__1Zvkv\",\"error\":\"MyPosts_error__2jqp2\"};"],"sourceRoot":""}
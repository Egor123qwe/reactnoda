{"version":3,"sources":["components/Login/Login.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Users/Users.module.css","components/Users/User/User.module.css","components/Navbar/Navbar.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Profile/Profile.module.css","images/Preloader.svg","components/Profile/MyPosts/Post/Post.module.css","reportWebVitals.js","components/Common/Preloader/Preloader.jsx","components/Profile/ProfileInfo/Status/StatuHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","API/API.js","redux/ProfileReducer.js","HOC/withRouter.jsx","components/Profile/ProfileInfo/ProfileInfoContainer.jsx","components/Profile/MyPosts/Post/Post.jsx","utils/TextAreaUtils.js","components/Profile/MyPosts/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostConteiner.jsx","components/Profile/Profile.jsx","HOC/withRedirect.jsx","components/Profile/ProfileContainer.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","redux/DialogReducer.js","components/Dialogs/DialogsContainer.jsx","components/Users/User/User.jsx","components/Users/Paginator/PageItem.jsx","components/Users/Paginator/Paginator.jsx","components/Users/Users.jsx","redux/UsersReducer.js","redux/userSelector.js","redux/UrlReducer.js","components/Users/UsersContainer.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/Header/Header.jsx","redux/AuthReducer.js","components/Header/HeaderConteiner.jsx","components/Login/Login.jsx","redux/AppReducer.js","App.js","redux/redux-store.js","index.js"],"names":["module","exports","LoginForm","title","submitButton","errorMessage","error","rememberMe","textarea","dialogs","dialogItems","massages","ProfileInfo","info","NikName","status","description","header","auth","login","logout","UsersPage","Page","ChoosingPage","User","Navbar","item","active","MyMassage","NotMyMassage","profile","__webpack_require__","p","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Preloader","react_default","a","createElement","alt","src","PreloaderSVG","Status","props","_useState","useState","_useState2","Object","slicedToArray","EditMode","SetEditMode","_useState3","_useState4","SetStatus","useEffect","className","s","onChange","currentTarget","value","autoFocus","onBlur","UpdateStatus","onDoubleClick","UserId","String","MyId","ProfileInfoData","Common_Preloader_Preloader","Fragment","ProfilePhoto","fullName","StatuHook","instance","axios","create","withCredentials","baseURL","headers","API-KEY","ProfileAPI","get","put","UsersAPI","UsersCountOnPage","id","delete","post","AuthAPI","email","password","captcha","type","initialState","PostsData","text","SetPreloader","MyUserId","ProfileReducer","state","arguments","length","undefined","action","Post","objectSpread","concat","toConsumableArray","photo","data","photos","large","userId","aboutMe","withRouter","Component","location","useLocation","navigate","useNavigate","params","useParams","assign","router","ProfileInfoAPI","this","GetUserThunk","GetStatus","PrevProps","UrlId","ProfileInfo_ProfileInfo","React","ProfileinfoContainer","connect","ProfilePage","Auth","Url","UserIdInURL","dispatch","SetUserId","SetProfileInfo","response","resultCode","lengthControl","Maxlen","result","validate","values","errors","lengthEmailControl","PostText","AddPostForm","formik","useFormik","initialValues","onSubmit","AddPost","handleSubmit","name","handleChange","MyPosts","PostsElement","map","Post_Post","Addposts","MyPosts_AddPostForm","posts","MyPostConteiner","Profile","ProfileInfoContainer","MyPosts_MyPostConteiner","WithRedirect","isAuth","react_router","to","compose","Profile_Profile","News","Music","Settings","CssClass","select","isActive","DialogItem","react_router_dom","NickName","Message","message","MessageText","AddMessageForm","SendMessage","Dialogs","MessageElements","DialogPage","MessageData","Message_Message","DialogItemElements","DialogItemData","DialogItem_DialogItem","Dialogs_AddMessageForm","DialogReducer","DialogsContainer","onClick","OnToogleFollow","UserData","followed","buttonElement","disabled","isDisable","img","small","SetUserIdInURL","PageItem","OnChoosePage","Paginator","GeneralCount","Math","ceil","UsersCount","minPage","SetMinPage","PagesCount","setPagesCount","StartPageTemp","Pages","i","push","Paginator_PageItem","Users","UsersElements","UsersData","DisabledButtons","indexOf","User_User","Paginator_Paginator","ToogleFollow","SetUsers","SetUsersCount","DisableButton","EnableButton","toggleFollowHelper","MethodAPI","UsersReducer","u","DisabledButtonsCopy","getUsersSelector","createSelector","users","filter","UrlReducer","UsersContainerAPI","GetUsersThunk","isFollow","UnFollowThunk","FollowThunk","page","GetUsersOnNewPageThunk","Users_Users","UsersContainer","items","totalCount","NavbarContainer","Header","Login","AuthLogOutThunk","AuthMeThunk","HeaderApi","Header_Header","HeaderConteiner","lengthPasswordControl","Password","AuthLoginThunk","setStatus","isRemember","submitProps","initialize","isInitialazed","AppReducer","AppMain","Initialize","Header_HeaderConteiner","Navbar_NavbarContainer","path","element","Login_Login","Profile_ProfileContainer","Dialogs_DialogsContainer","Users_UsersContainer","components_News_News","components_Music_Music","components_Settings_Settings","App","reducers","combineReducers","AuthReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","createRoot","document","getElementById","render","es","src_App","getState"],"mappings":"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","file":"static/js/main.40f5d997.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginForm\":\"Login_LoginForm__3iye0\",\"title\":\"Login_title__2nduG\",\"submitButton\":\"Login_submitButton__1qXYP\",\"errorMessage\":\"Login_errorMessage__3pKKB\",\"error\":\"Login_error__uZq-A\",\"rememberMe\":\"Login_rememberMe__1vI_x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"MyPosts_textarea__3JGmV\",\"errorMessage\":\"MyPosts_errorMessage__1Zvkv\",\"error\":\"MyPosts_error__2jqp2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3VATK\",\"dialogItems\":\"Dialogs_dialogItems__3DCOo\",\"massages\":\"Dialogs_massages__aDW9g\",\"errorMessage\":\"Dialogs_errorMessage__-1HlE\",\"error\":\"Dialogs_error__31NYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__3mJj3\",\"info\":\"ProfileInfo_info__2VCz4\",\"NikName\":\"ProfileInfo_NikName__2XfWG\",\"status\":\"ProfileInfo_status__39MEO\",\"description\":\"ProfileInfo_description__1F5b4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__11mjV\",\"auth\":\"Header_auth__1YNdF\",\"login\":\"Header_login__15O8t\",\"logout\":\"Header_logout__R54_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UsersPage\":\"Users_UsersPage__1DRgE\",\"Page\":\"Users_Page__1KYEp\",\"ChoosingPage\":\"Users_ChoosingPage__1SBNw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"User\":\"User_User__3FfYj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__12tzE\",\"item\":\"Navbar_item__2P3Wr\",\"active\":\"Navbar_active__1u_rP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"DialogItem_active__3pw6G\",\"item\":\"DialogItem_item__1yyqI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyMassage\":\"Message_MyMassage__BvnZO\",\"NotMyMassage\":\"Message_NotMyMassage__mffrV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1ni5C\"};","module.exports = __webpack_public_path__ + \"static/media/Preloader.6402ba95.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3xHLe\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport PreloaderSVG from './../../../images/Preloader.svg';\r\n\r\nlet Preloader = () => {\r\n    return <div><img alt='' src={PreloaderSVG}/></div>\r\n}\r\n\r\nexport default Preloader;","import s from '../ProfileInfo.module.css'\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\nfunction Status(props) {\n\n    let [EditMode, SetEditMode] = useState(false)\n    let [Status, SetStatus] = useState(props.status)\n\n    function DisableEdit() {\n        SetEditMode(false)\n        props.UpdateStatus(Status)\n    }\n    function EnableEdit() {\n        if (props.UserId === String(props.MyId)) {\n            SetEditMode(true)\n        }\n    }\n\n    useEffect(() => { SetStatus(props.status) }, [props.status])\n\n    function OnChange(e) {\n        SetStatus(e.currentTarget.value)\n    }\n\n        return (\n            <div className={s.status}>\n                {\n                    EditMode ? \n                        <input onChange={OnChange} autoFocus={true} onBlur={DisableEdit} value={Status}></input> : \n                        <span onDoubleClick={EnableEdit}>{Status ? Status : '-----'}</span>\n                }\n            </div>\n        )\n}\n\nexport default Status;","import s from './ProfileInfo.module.css'\nimport Preloader from '../../Common/Preloader/Preloader';\nimport Status from './Status/StatuHook';\nimport React from 'react';\n\nfunction ProfileInfo(props) {\n    return (\n        <div className={s.ProfileInfo}>\n            <div className={s.info}>\n                {props.ProfileInfoData.Preloader ? <Preloader/> : <></>}\n                <img alt='' src={props.ProfileInfoData.ProfilePhoto} />\n                <div className={s.NikName}>{props.ProfileInfoData.fullName}</div>\n                <Status MyId={props.MyId} UserId={props.UserId} UpdateStatus={props.UpdateStatus} status={props.ProfileInfoData.status} />\n                <div className={s.description}>{props.ProfileInfoData.description}</div>\n            </div>\n        </div>\n      );\n}\n\nexport default ProfileInfo;","import axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '0cce5b73-8f5a-46a8-8e1d-6c02864a8215'\n    }\n})\n\n\nexport const ProfileAPI = {\n    GetUser(UserId) {\n        return instance.get('profile/'+ UserId)\n    },\n    GetStatus(UserId) {\n        return instance.get('/profile/status/'+ UserId)\n    },\n    UpdateStatus(status) {\n        return instance.put('/profile/status' , { status: status })\n    }\n}\n\nexport const UsersAPI = {\n    GetUsers(UsersCountOnPage, ChoosingPage) {\n        return instance.get('users?count='+ UsersCountOnPage + '&page=' + ChoosingPage )\n    },\n\n    UnFollow(id) {\n        return (instance.delete(('follow/' + id)))\n    },\n\n    Follow(id) {\n        return (instance.post(('follow/' + id), {}, ))\n    },\n}\nexport const AuthAPI = {\n    AuthMe() {\n        return instance.get('https://social-network.samuraijs.com/api/1.0/auth/me')\n    },\n    LoginMe(email, password, rememberMe) {\n        return instance.post('https://social-network.samuraijs.com/api/1.0/auth/login', {email, password, rememberMe, captcha: true})\n    },\n    LogOut() {\n        return instance.delete('https://social-network.samuraijs.com/api/1.0/auth/login')\n    }\n}","import { ProfileAPI } from '../API/API';\n\nconst ADDPOST = 'ADDPOST'\nconst SETPROFILEINFO = 'SETPROFILEINFO'\nconst SETUSERID = 'SETUSERID'\nconst SETPRELOADER = 'SETPRELOADER';\nconst SETSTAUS = 'SETSTAUS';\n\nexport const AddPost = (Post) => {\n    let action = {type: ADDPOST, Post}\n    return action\n}\n\nexport let SetProfileInfo = (data) => {\n    let action = {type: SETPROFILEINFO, data: data}\n    return action\n}\n\nexport let SetUserId = (UserId) => {\n    let action = {type: SETUSERID, UserId: UserId}\n    return action\n}\n\nexport let SetPreloader = () => {\n    let action = {type: SETPRELOADER}\n    return action\n}\n\nexport let SetStatus = (status) => {\n    let action = {type: SETSTAUS, status}\n    return action\n}\n\nlet initialState = { \n\n    PostsData : [\n        {text : 'это мой первый хиииит', id: '1'},\n        {text : 'подписчики я вас люблю!', id: '2'},\n        ],\n    ProfileInfoData: {\n        fullName: '',\n        status: '',\n        description: '',\n        ProfilePhoto: '',\n        SetPreloader: false\n    },\n    MyUserId: '13865',\n    UserId: '2'\n}\n\nlet ProfileReducer = (state = initialState, action) => {\n\n        switch(action.type) {\n            case ADDPOST: \n                let post = {text : action.Post, id: '3'}\n                return {\n                    ...state,\n                    PostsData: [post, ...state.PostsData],\n                }\n            case SETPRELOADER:\n                return {...state, ProfileInfoData: {...state.ProfileInfoData, Preloader: state.ProfileInfoData.Preloader ? false : true }  }\n            case SETUSERID:\n                return {\n                    ...state, \n                    UserId: action.UserId\n                }\n            case SETSTAUS: \n            \n                return {\n                    ...state,\n                    ProfileInfoData: {...state.ProfileInfoData, status: action.status}\n                }\n            case SETPROFILEINFO: \n                let photo = action.data.photos.large ? action.data.photos.large : 'https://i.pinimg.com/736x/18/ca/6f/18ca6f28ec97d6afb3117d4b6aece2e6.jpg'\n                return {\n                    ...state,\n                    UserId: action.data.userId,\n                    ProfileInfoData: {  ...state.ProfileInfoData,  \n                                        fullName : action.data.fullName,\n                                        ProfilePhoto: photo,\n                                        description: action.data.aboutMe\n                                    }\n                }\n            default: \n                return state;\n        }\n}\n\nexport let GetUserThunk = (UserId) => {\n    return ( (dispatch) => {\n        dispatch(SetPreloader())\n        dispatch(SetUserId(UserId))\n        ProfileAPI.GetUser(UserId)\n            .then(data => {\n                dispatch(SetProfileInfo(data.data))\n                dispatch(SetPreloader())\n            })\n    })\n}\n\nexport let GetStatus = (UserId) => {\n    return ( (dispatch) => {\n        ProfileAPI.GetStatus(UserId)\n            .then(response => {\n                dispatch(SetStatus(response.data))\n            })\n    })\n}\n\nexport let UpdateStatus = (status) => {\n    return ( (dispatch) => {\n        ProfileAPI.UpdateStatus(status)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(SetStatus(status))\n                }\n            })\n    })\n}\n\nexport default ProfileReducer;","import { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport React from 'react';\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component {...props} router={{ location, navigate, params }} />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n\nexport default withRouter;","import { connect } from 'react-redux';\nimport ProfileInfo from './ProfileInfo';\nimport React from \"react\";\nimport { GetUserThunk, GetStatus, UpdateStatus } from '../../../redux/ProfileReducer';\nimport withRouter from '../../../HOC/withRouter';\n\nclass ProfileInfoAPI extends React.Component {\n\n    componentDidMount() {\n        this.props.GetUserThunk( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n        this.props.GetStatus( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n    }\n\n    componentDidUpdate(PrevProps) {\n        if (PrevProps.UrlId !== this.props.UrlId) {\n            this.props.GetUserThunk( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n            this.props.GetStatus( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n        }\n    }\n\n    render() {\n        return (<ProfileInfo MyId={this.props.MyId} UserId={this.props.router.params.userId} UpdateStatus={this.props.UpdateStatus} ProfileInfoData={this.props.ProfileInfoData}/>)\n    }\n} \n\nfunction MapStateToProps(state) {\n    return {\n        ProfileInfoData: state.ProfilePage.ProfileInfoData,\n        MyId: state.Auth.Auth.id,\n        UrlId: state.Url.UserIdInURL.id\n    }\n}\n\nlet ProfileinfoContainer = connect(MapStateToProps, { GetUserThunk, GetStatus, UpdateStatus })(withRouter(ProfileInfoAPI))\n\nexport default ProfileinfoContainer","import s from './Post.module.css';\nimport React from 'react';\n\nfunction Post(props) {\n    return (\n        <div className={s.item}>\n            <img alt='' src=\"https://i.pinimg.com/736x/18/ca/6f/18ca6f28ec97d6afb3117d4b6aece2e6.jpg\"/>\n            {props.text}\n        </div>\n      );\n}\n\nexport default Post;","export const lengthControl = (Maxlen) => {\r\n    return (text) => {\r\n        let result = undefined\r\n        if (!text) result = 'Must be filled';\r\n        if (result === undefined) {\r\n            if (text.length > Maxlen) result = 'Must be less than ' + Maxlen;\r\n        }\r\n        return result;\r\n    }\r\n}","import s from './MyPosts.module.css';\nimport React from 'react';\nimport { lengthControl } from '../../../utils/TextAreaUtils';\nimport { useFormik } from 'formik';\n\n\nconst validate = values => {\n    const errors = {};\n\n    let lengthEmailControl = lengthControl(40)\n    if (lengthEmailControl(values.PostText)) { errors.PostText = lengthEmailControl(values.PostText) }\n  \n    return errors;\n};\n\n\nconst AddPostForm = (props) => {\n\n    const formik = useFormik({\n        initialValues: {\n            PostText: '',\n        },\n        validate,\n        onSubmit: values => {\n            props.AddPost(values.PostText)\n            values.PostText = ''\n        },\n    });\n\n    return (\n        <form className={s.AddPostForm} onSubmit={formik.handleSubmit}>\n            <div className={s.AddPost}>\n                <span className={formik.errors.PostText ? s.error : s.PostText}><input name=\"PostText\" id='PostText' type=\"PostText\" onChange={formik.handleChange} value={formik.values.PostText}/></span>\n                {formik.errors.PostText ? <div className={s.errorMessage}>{formik.errors.PostText}</div> : null}\n            </div>\n            <button className={s.submitButton} type=\"submit\">Add Post</button>\n        </form>\n    );\n};\n\nexport default AddPostForm;","import s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport React from 'react';\nimport AddPostForm from './AddPostForm';\n\n\nfunction MyPosts(props) {\n\n    let PostsElement = props.ProfilePage.PostsData.map( e => <Post text={e.text} id={e.id}/>)\n\n    return (\n        <div className={s.MyPosts}>\n            <div className={s.Addposts}>\n                <AddPostForm AddPost={props.AddPost}/>\n            </div>\n            <div className={s.posts}>\n                {PostsElement}\n            </div>\n            \n        </div>\n      );\n}\n\nexport default MyPosts;","import { AddPost } from '../../../redux/ProfileReducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToProps = (state) => {\n\treturn { \n\t\tProfilePage : state.ProfilePage \n\t}\n}\n\nlet MyPostConteiner = connect(mapStateToProps, {AddPost})(MyPosts);\n\nexport default MyPostConteiner;\n\n","import s from './Profile.module.css';\nimport ProfileinfoContainer from './ProfileInfo/ProfileInfoContainer';\nimport MyPostConteiner from './MyPosts/MyPostConteiner';\nimport React from 'react';\n\n\nfunction Profile(props) {\n    return (\n        <div className={s.profile}>\n            <ProfileinfoContainer />\n            <MyPostConteiner />\n        </div>\n      );\n}\n\n\nexport default Profile","import { connect } from 'react-redux';\nimport React from \"react\";\nimport { Navigate } from 'react-router-dom';\n\nfunction WithRedirect(Component) {\n    function ComponentWithRouter(props) {\n        if(!props.isAuth) {\n            return <Navigate to='/login' />\n        }\n        else {\n            return <Component {...props}/>\n        }\n    }\n\n    function MapStateToProps(state) {\n        return {\n            isAuth : state.Auth.Auth.isAuth\n        }\n    }\n\n    let ComponentWithRouterProps = connect(MapStateToProps)(ComponentWithRouter)\n\n    return ComponentWithRouterProps\n}\n\nexport default WithRedirect","import React from 'react';\nimport { compose } from 'redux';\nimport Profile from './Profile';\nimport WithRedirect from '../../HOC/withRedirect';\nimport withRouter from '../../HOC/withRouter';\nimport { connect } from 'react-redux';\n\n\nfunction ProfileContainer() {\n\n    return (\n        <Profile />\n      );\n}\n\nfunction MapStateToProps(state) {\n  return {}  \n}\n\nexport default compose(WithRedirect, connect(MapStateToProps, {}))(withRouter(ProfileContainer))","import React from 'react'\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default News;\r\n","import React from 'react'\r\n\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Music;\r\n","import React from 'react'\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Settings;\r\n","import s from './DialogItem.module.css';\nimport { NavLink } from 'react-router-dom';\nimport React from 'react';\n\nlet CssClass = () => {\n\treturn (\n\t\tselect => select.isActive ? s.active : s.item\n\t);\n}\n\nfunction DialogItem(props) {\n\treturn (\n\t\t<div><NavLink className={CssClass()} to={\"/dialogs/\" + props.id}>{props.NickName}</NavLink></div>\n\t  );\n}\n\nexport default DialogItem;","import s from './Message.module.css';\nimport React from 'react';\n\nfunction isMyMessage(id) {\n    if (id === '1'){\n        return s.MyMassage;\n    }\n    else {\n        return s.NotMyMassage;\n    }\n}\n\nfunction Message(props) {\n\treturn (\n\t\t<div className={isMyMessage(props.id)}>{props.message}</div>\n\t  );\n}\n\nexport default Message;","import s from './Dialogs.module.css';\nimport React from 'react';\nimport { lengthControl } from '../../utils/TextAreaUtils';\nimport { useFormik } from 'formik';\n\n\nconst validate = values => {\n    const errors = {};\n\n    let lengthEmailControl = lengthControl(40)\n    if (lengthEmailControl(values.MessageText)) { errors.MessageText = lengthEmailControl(values.MessageText) }\n  \n    return errors;\n};\n\n\nconst AddMessageForm = (props) => {\n\n    const formik = useFormik({\n        initialValues: {\n            MessageText: '',\n        },\n        validate,\n        onSubmit: values => {\n            props.SendMessage(values.MessageText)\n            values.MessageText = ''\n        },\n    });\n\n    return (\n        <form className={s.AddMessageForm} onSubmit={formik.handleSubmit}>\n            <div className={s.MessageText}>\n                <span className={formik.errors.MessageText ? s.error : s.MessageText}><input id='MessageText' type=\"MessageText\" onChange={formik.handleChange} value={formik.values.MessageText}/></span>\n                {formik.errors.MessageText ? <div className={s.errorMessage}>{formik.errors.MessageText}</div> : null}\n            </div>\n            <button className={s.submitButton} type=\"submit\">Send message</button>\n        </form>\n    );\n};\n\nexport default AddMessageForm;","import s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport React from 'react';\nimport AddMessageForm from './AddMessageForm';\n\n\nfunction Dialogs(props) {\n\t\n\tlet MessageElements = props.DialogPage.MessageData.map( e => <Message message = {e.message} id={e.id} />);\n\tlet DialogItemElements = props.DialogPage.DialogItemData.map(e => <DialogItem NickName={e.NickName} id={e.id}/>)\n\n\treturn (\n\t\t<div className={s.dialogs}>\n\t\t\t<div className= {s.dialogItems}>\n\t\t\t\t{DialogItemElements}\n\t\t\t</div>\n\t\t\t<div className={s.massages}>\n\t\t\t\t{MessageElements}\n\t\t\t\t<AddMessageForm SendMessage={props.SendMessage}/>\n\t\t\t</div>\n\t\t</div>\n\t  );\n}\n\nexport default Dialogs;","const SENDMESSAGE = 'SENDMESSAGE'\n\nexport const SendMessage = (Message) => {\n    let action = {type: SENDMESSAGE, Message}\n    return action\n}\n\nlet initialState = {\n\n        DialogItemData : [\n            {NickName : 'Yagor', id : '1'},\n            {NickName : 'Nickita', id : '2'},\n            {NickName : 'Vova', id : '3'},\n            {NickName : 'Sanshain', id : '4'},\n            {NickName : 'Slava', id : '5'}\n        ],\n        MessageData : [\n            {message : 'Привет, я Егор', id : '2'},\n            {message : 'Я знаю!', id : '1'},\n            {message : 'Я тоже?', id : '2'}\n        ]\n}\n\nlet DialogReducer = (state = initialState, action) => {\n\n    switch(action.type) {\n        case SENDMESSAGE: \n            let message = {message : action.Message, id: '1'}\n            return {\n                ...state,\n                MessageData: [...state.MessageData, message]\n            }\n        default: \n            return state\n    }\n}\n\nexport default DialogReducer;","import Dialogs from './Dialogs'\nimport { SendMessage } from '../../redux/DialogReducer';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport WithRedirect from '../../HOC/withRedirect';\n\n\nlet mapStateToProps = (state) => {\n\treturn { \n\t\tDialogPage : state.DialogPage,\n\t}\n}\n\nlet DialogsContainer = compose(\n\tconnect(mapStateToProps, {SendMessage}),\n\tWithRedirect\n)(Dialogs)\n\nexport default DialogsContainer;","import s from './User.module.css'\nimport { NavLink } from 'react-router-dom';\nimport React from 'react';\n\nfunction User(props) {\n\n    let onClick = () => {\n        props.OnToogleFollow(props.UserData.id, props.UserData.followed)\n    }\n    \n    let buttonElement = props.UserData.followed ? <button disabled={props.isDisable} onClick={onClick}>Unfollow</button> : <button disabled={props.isDisable} onClick={onClick}>follow</button>\n\n    let img = (props.UserData.photos.small == null) ? 'https://i.pinimg.com/736x/18/ca/6f/18ca6f28ec97d6afb3117d4b6aece2e6.jpg' : props.UserData.photos.small\n\n    return (\n        <div className={s.User}>\n            <NavLink onClick={() => { props.SetUserIdInURL(props.UserData.id) }} to={'/profile/'+ props.UserData.id}><img src={img} alt=''/></NavLink>\n            <div className={s.name}>{props.UserData.name}</div>\n            <div className={s.status}>{props.UserData.status}</div>\n            <div className={s.location}>{props.UserData.location}</div>\n            {buttonElement}\n        </div>\n    );\n}\n\nexport default User;","import React from \"react\";\nimport s from '../Users.module.css'\n\n\nfunction PageItem(props) {\n\n    return (\n        <span   onClick = {() => (props.OnChoosePage(props.item))}\n                to={'/users?count=' + props.UsersCountOnPage + '&page=' + props.item} \n                className={props.ChoosingPage === props.item ? s.ChoosingPage : s.Page}>\n                {props.item}\n        </span> \n    )\n\n}\n\nexport default PageItem;","import React from \"react\";\nimport PageItem from './PageItem';\nimport { useState, useEffect } from \"react\";\n\n\nfunction Paginator(props) {\n\n    let GeneralCount = Math.ceil(props.UsersCount/props.UsersCountOnPage)\n\n    let [minPage, SetMinPage] = useState(1)\n    let [PagesCount, setPagesCount] = useState(1)\n\n    useEffect( () => \n            {\n                let StartPageTemp = minPage;\n                if ( props.ChoosingPage - minPage > 4 ) {\n                    StartPageTemp = props.ChoosingPage - 4\n                    SetMinPage(StartPageTemp)\n                }\n                if ( (props.ChoosingPage - minPage < 4) ) {\n                    if ( (props.ChoosingPage - 3 > 0)) {\n                        StartPageTemp = props.ChoosingPage - 3\n                        SetMinPage(StartPageTemp)\n                    }\n                    else {\n                        SetMinPage(1)\n                    }\n                }\n                if ( StartPageTemp + 9 > GeneralCount) {\n                    setPagesCount(GeneralCount - StartPageTemp)\n                }\n                else {\n                    setPagesCount(GeneralCount > 9 ? 9 : GeneralCount) \n                }\n            }, [props.UsersCount, props.ChoosingPage]\n            )\n\n    let Pages = []\n\n    for (var i = minPage; i <= PagesCount + minPage; i++) {Pages.push(i) }\n\n    Pages = Pages.map(item => \n            <PageItem OnChoosePage={props.OnChoosePage} UsersCountOnPage={props.UsersCountOnPage} \n                      ChoosingPage={props.ChoosingPage} item={item}/>\n        )\n\n    return (\n        <div>\n            { Pages }\n        </div>\n    )\n\n}\n\nexport default Paginator;","import React from \"react\";\nimport User from \"./User/User\";\nimport s from './Users.module.css'\nimport Preloader from '../Common/Preloader/Preloader';\nimport Paginator from './Paginator/Paginator';\n\n\nfunction Users(props) {\n\n    let UsersElements = props.UsersData.map(e => {\n        let isDisable = props.DisabledButtons.indexOf(e.id) !== -1 ? true : false\n        return <User SetUserIdInURL={props.SetUserIdInURL} isDisable={isDisable} OnToogleFollow={props.OnToogleFollow} UserData = {e}/>\n    })\n\n    return (\n        <div className={s.UsersPage}>\n            {props.SetPreloader ? <Preloader/> : <></>}\n            <Paginator UsersCount={props.UsersCount} UsersCountOnPage={props.UsersCountOnPage} \n                        OnChoosePage={props.OnChoosePage} ChoosingPage={props.ChoosingPage} /> \n            { UsersElements }\n        </div>\n    )\n\n}\n\nexport default Users;","import { UsersAPI } from \"../API/API\";\n\nconst TOGGLEFOLLOW = 'TOGGLEFOLLOW';\nconst SETUSERS = 'SETUSERS';\nconst COOSEPAGE = 'COOSEPAGE';\nconst SETUSERSCOUNT = 'SETUSERSCOUNT';\nconst SETPRELOADER = 'SETPRELOADER';\nconst DISABLEBUTTON = 'DISABLEBUTTON';\nconst ENABLEBUTTON = 'ENABLEBUTTON';\n\nexport let ToogleFollow = (id) => {\n    let action = {type: TOGGLEFOLLOW, id: id}\n    return action\n}\n\nexport let SetUsers = (UsersData) => {\n    let action = {type: SETUSERS, UsersData: UsersData}\n    return action\n}\n\nexport let OnCoosePage = (Page) => {\n    let action = {type: COOSEPAGE, Page: Page}\n    return action\n}\n\nexport let SetUsersCount = (UsersCount) => {\n    let action = {type: SETUSERSCOUNT, UsersCount: UsersCount}\n    return action\n}\n\nexport let SetPreloader = () => {\n    let action = {type: SETPRELOADER}\n    return action\n}\n\nexport let DisableButton = (id) => {\n    let action = {type: DISABLEBUTTON, id: id}\n    return action\n}\n\nexport let EnableButton = (id) => {\n    let action = {type: ENABLEBUTTON, id: id}\n    return action\n}\n\nlet initialState = {\n    UsersData: [],\n    UsersCountOnPage: 4,\n    UsersCount: 1,\n    ChoosingPage: 1,\n    Preloader: false,\n    DisabledButtons: []\n}\n\nlet UsersReducer = (state = initialState, action) => {\n\n    switch(action.type) {\n        case TOGGLEFOLLOW:\n            return {\n                ...state,\n                UsersData: state.UsersData.map(u => {\n                    if (u.id === action.id) {\n                        return { ...u, followed: u.followed ? false : true }\n                    }\n                    return u\n                })\n            }\n        case SETUSERS:\n            return {...state, UsersData: [ ...action.UsersData]}\n        case COOSEPAGE:\n            return {...state, ChoosingPage: action.Page}\n        case SETUSERSCOUNT:\n            return {...state, UsersCount: action.UsersCount}\n        case SETPRELOADER:\n            return {...state, Preloader: state.Preloader ? false : true}\n        case ENABLEBUTTON:\n            let DisabledButtonsCopy = [...state.DisabledButtons]\n            delete DisabledButtonsCopy[DisabledButtonsCopy.indexOf(action.id)]\n            return {...state,\n                DisabledButtons: DisabledButtonsCopy\n            }\n        case DISABLEBUTTON:\n            return {...state,\n                DisabledButtons: [...state.DisabledButtons, action.id]\n            }\n        default:\n            return state;\n    }\n}\n\nexport let GetUsersThunk = (UsersCountOnPage, ChoosingPage) => {\n    return ( (dispatch) => {\n        dispatch(SetPreloader())\n        UsersAPI.GetUsers(UsersCountOnPage, ChoosingPage).then(response => {\n                dispatch(SetUsers(response.data.items))\n                dispatch(SetUsersCount(response.data.totalCount))\n                dispatch(SetPreloader())\n        })\n    })\n}\n\nfunction toggleFollowHelper(MethodAPI, id, dispatch) {\n    dispatch(DisableButton(id))\n    MethodAPI(id).then(response => {\n        if (response.data.resultCode === 0) {\n            dispatch(ToogleFollow(id))\n            dispatch(EnableButton(id))\n        }\n    })\n}\n\nexport let UnFollowThunk = (id) => {\n    return ( (dispatch) => {\n        toggleFollowHelper(UsersAPI.UnFollow, id, dispatch)\n    })\n}\n\nexport let FollowThunk = (id) => {\n    return ( (dispatch) => {\n        toggleFollowHelper(UsersAPI.Follow, id, dispatch)\n    })\n}\n\nexport let GetUsersOnNewPageThunk = (UsersCountOnPage, page) => {\n    return ( (dispatch) => {\n        dispatch(SetPreloader())\n        dispatch(OnCoosePage(page))\n        UsersAPI.GetUsers(UsersCountOnPage, page).then(response => {\n                dispatch(SetUsers(response.data.items))\n                dispatch(SetUsersCount(response.data.totalCount))\n                dispatch(SetPreloader())\n        })\n    })\n}\n\nexport default UsersReducer;","import { createSelector } from 'reselect';\n\nfunction getUsers(state) {\n    return state.UsersPage.UsersData\n}\n\nexport let getUsersSelector = createSelector( getUsers, (users) => {\n    return users.filter(u => true)\n})","const SERUSERIDINURL = 'SERUSERIDINURL'\n\nexport let SetUserIdInURL = (id) => {\n    let action = {type: SERUSERIDINURL, id}\n    return action\n}\n\nlet initialState = {\n    UserIdInURL: {\n        id: '',\n    }\n}\n\nlet UrlReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case SERUSERIDINURL: \n                return {\n                    ...state,\n                    UserIdInURL: {...state.UserIdInURL, id: action.id}\n                }\n        default: \n            return state\n    }\n}\n\nexport default UrlReducer;","import { connect } from 'react-redux';\nimport Users from \"./Users\";\nimport { GetUsersThunk, GetUsersOnNewPageThunk, FollowThunk, UnFollowThunk } from '../../redux/UsersReducer';\nimport React from \"react\";\nimport { getUsersSelector } from '../../redux/userSelector';\nimport { SetUserIdInURL } from '../../redux/UrlReducer';\n\n\nclass UsersContainerAPI extends React.Component {\n    \n    componentDidMount() {\n        this.props.GetUsersThunk(this.props.UsersCountOnPage, this.props.ChoosingPage)\n    }\n\n    OnToogleFollow(id, isFollow) {\n        isFollow ? this.props.UnFollowThunk(id) : this.props.FollowThunk(id)\n    }\n\n    OnChoosePage(page) {\n        this.props.GetUsersOnNewPageThunk(this.props.UsersCountOnPage, page)\n    }\n\n    render() {\n        return <Users\n                    SetUserIdInURL={this.props.SetUserIdInURL}\n                    UsersData={this.props.UsersData} \n                    UsersCount={this.props.UsersCount} \n                    UsersCountOnPage={this.props.UsersCountOnPage}\n                    ChoosingPage={this.props.ChoosingPage}\n                    OnChoosePage={this.OnChoosePage.bind(this)}\n                    OnToogleFollow={this.OnToogleFollow.bind(this)}\n                    Preloader={this.props.Preloader}\n                    DisabledButtons={this.props.DisabledButtons}\n                />\n    }\n}\n\n\n\nlet MapStateToProps = (state) => {\n    return {\n        UsersData: getUsersSelector(state),\n        UsersCountOnPage: state.UsersPage.UsersCountOnPage,\n        UsersCount: state.UsersPage.UsersCount,\n        ChoosingPage: state.UsersPage.ChoosingPage,\n        Preloader: state.UsersPage.Preloader,\n        DisabledButtons: state.UsersPage.DisabledButtons\n    }\n}\n\nlet UsersContainer = connect(MapStateToProps, { GetUsersThunk, GetUsersOnNewPageThunk, FollowThunk, UnFollowThunk, SetUserIdInURL })(UsersContainerAPI)\n\nexport default UsersContainer;","import s from './Navbar.module.css';\nimport { NavLink } from 'react-router-dom';\nimport React from 'react';\n\nconst CssClass = () => {\n    return (\n        select => select.isActive ? s.active : s.item\n    );\n}\n\nfunction Navbar(props) {\n    return (\n        <nav className={s.Navbar}>\n            <div><NavLink onClick={ () => { props.SetUserIdInURL(props.UserId) } }  to={'/profile/' + props.UserId} className={CssClass()}>Profile</NavLink></div>\n            <div><NavLink to=\"/dialogs\" className={CssClass()}>Messages</NavLink></div>\n            <div><NavLink to=\"/users\" className={CssClass()}>Users</NavLink></div>\n            <div><NavLink to=\"/news\" className={CssClass()}>News</NavLink></div>\n            <div><NavLink to=\"/music\" className={CssClass()}>Music</NavLink></div>\n            <div><NavLink to=\"/settings\" className={CssClass()}>Settings</NavLink></div>\n        </nav>\n      );\n}\n\nexport default Navbar;","import { connect } from 'react-redux';\nimport Navbar from './Navbar';\nimport { SetUserIdInURL } from '../../redux/UrlReducer';\n\n\nfunction MapStateToProps(state) {\n    return {\n        UserId: state.Auth.Auth.id\n    }\n}\n\nlet NavbarContainer = connect(MapStateToProps, { SetUserIdInURL })(Navbar)\n\nexport default NavbarContainer;","import s from './Header.module.css';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction Header(props) {\n    return (\n        <div className={s.header}>\n            <img alt='' src=\"https://auto.24tv.ua/resources/photos/news/202109/33374__d9df13cb-b9fc-44e1-9334-53e8d6453698.png?1632224175000\" />\n\n            {props.isAuth ? <span className={s.auth}>{props.Login} - <button className={s.logout} onClick={  props.AuthLogOutThunk }>Log Out</button></span> : \n                            <span className={s.auth}><NavLink className={s.login} to='/login'>Login</NavLink></span>}\n        </div>\n      );\n}\n\nexport default Header;","import { AuthAPI } from '../API/API';\n\nconst SETAUTH = 'SETAUTH'\nconst DELETEAUTH = 'DELETEAUTH'\n\nexport let SetAuth = (data) => {\n    let action = {type: SETAUTH, data: data}\n    return action\n}\n\nexport let DeleteAuth = () => {\n    let action = {type: DELETEAUTH}\n    return action\n}\n\nlet initialState = {\n\n        Auth : {\n            id: '',\n            email: '',\n            login: '',\n            isAuth: false\n        }\n}\n\nlet DialogReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case SETAUTH: \n            return {\n                ...state,\n                Auth : {...state.Auth, id: action.data.id, email: action.data.email, login: action.data.login, isAuth: true}\n            }\n        case DELETEAUTH: \n            return {\n                ...state,\n                Auth : {...state.Auth, id: '', email: '', login: '', isAuth: false}\n            }\n        default: \n            return state\n    }\n}\n\nexport let AuthMeThunk = () => {\n    return ( (dispatch) => {\n        return AuthAPI.AuthMe()\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(SetAuth(response.data.data))\n            }\n        })\n    })\n}\n\nexport let AuthLoginThunk = (email, password, rememberMe, setStatus) => {\n    return ( (dispatch) => {\n        AuthAPI.LoginMe(email, password, rememberMe)\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(AuthMeThunk())\n            }\n            else {\n                setStatus({error: 'Wrong login or password'})\n            }\n        })\n    })\n}\n\nexport let AuthLogOutThunk = () => {\n    return ( (dispatch) => {\n        AuthAPI.LogOut()\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(DeleteAuth())\n            }\n        })\n    })\n}\n\nexport default DialogReducer;","import { connect } from 'react-redux';\nimport Header from './Header';\nimport React from \"react\";\nimport { AuthLogOutThunk } from '../../redux/AuthReducer';\n\nclass HeaderApi extends React.Component {\n\n    render() {\n        return <Header AuthLogOutThunk={this.props.AuthLogOutThunk} Login={this.props.Login} isAuth={this.props.isAuth}/>\n    }\n}\n\n\nfunction MapStateToProps(state) {\n    return {\n        Login: state.Auth.Auth.login,\n        isAuth: state.Auth.Auth.isAuth\n    }\n}\n\nlet HeaderConteiner = connect(MapStateToProps, { AuthLogOutThunk })(HeaderApi);\n\nexport default HeaderConteiner","import React from 'react'\r\nimport { useFormik } from 'formik';\r\nimport s from './Login.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { AuthLoginThunk } from '../../redux/AuthReducer';\r\nimport { lengthControl } from '../../utils/TextAreaUtils';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n\r\n    let lengthEmailControl = lengthControl(40)\r\n    if (lengthEmailControl(values.email)) { errors.email = lengthEmailControl(values.email) }\r\n  \r\n    let lengthPasswordControl = lengthControl(15)\r\n    if (lengthPasswordControl(values.Password)) { errors.Password = lengthPasswordControl(values.Password) }\r\n  \r\n    return errors;\r\n};\r\nconst LoginForm = (props) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            Password: '',\r\n            isRemember: false\r\n        },\r\n        validate,\r\n        onSubmit: (values, submitProps) => {\r\n            props.AuthLoginThunk(values.email, values.Password, values.isRemember, submitProps.setStatus)\r\n        },\r\n    });\r\n\r\n    if (props.isAuth) {\r\n        return <Navigate to={'/profile/' + props.MyId} />\r\n    }\r\n\r\n    function MainError() {\r\n        return formik.status ? formik.status.error : null\r\n    }\r\n\r\n    return (\r\n        <form className={s.LoginForm} onSubmit={formik.handleSubmit}>\r\n            <div className={s.title}>\r\n                Login\r\n            </div>\r\n            <div className={s.email}>\r\n                <span className={formik.errors.email ? s.error : s.email}><input id='email' type=\"email\" onChange={formik.handleChange} value={formik.values.email}/></span>\r\n                {formik.errors.email ? <div className={s.errorMessage}>{formik.errors.email}</div> : null}\r\n            </div>\r\n            <div>\r\n                <span className={formik.errors.Password ? s.error : s.Password}><input id='Password' type=\"Password\" onChange={formik.handleChange} value={formik.values.Password}/></span>\r\n                {formik.errors.Password ? <div className={s.errorMessage}>{formik.errors.Password}</div> : null}\r\n            </div>\r\n            <div className={s.rememberMe} >\r\n                <input id='isRemember' type=\"checkbox\" onChange={formik.handleChange} value={formik.values.isRemember}/>\r\n                Remember Me\r\n            </div>\r\n            <button className={s.submitButton} type=\"submit\">Log In</button>\r\n            <div className={s.errorMessage}>{ MainError() }</div>\r\n        </form>\r\n    );\r\n};\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.Auth.Auth.isAuth,\r\n        MyId: state.Auth.Auth.id\r\n    }\r\n}\r\n\r\nlet Login = connect(MapStateToProps, { AuthLoginThunk })(LoginForm)\r\n\r\nexport default Login;\r\n","import { AuthMeThunk } from \"./AuthReducer\"\n\n\nconst INITIALIZING = 'INITIALIZING'\n\nexport let SetInitializeStatus = () => {\n    let action = {type: INITIALIZING}\n    return action\n}\n\nlet initialState = {\n    initialize: {\n        isInitialazed: false\n    }\n}\n\nlet AppReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case INITIALIZING: \n                return {\n                    ...state,\n                    initialize: {...state.initialize, isInitialazed: true}\n                }\n        default: \n            return state\n    }\n}\n\nexport let Initialize = () => {\n    return ( (dispatch) => {\n        let promise = dispatch(AuthMeThunk())\n        promise.then(() => {\n            dispatch(SetInitializeStatus())\n        })\n    })\n}\n\nexport default AppReducer;","import './App.css';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport { Route, Routes } from 'react-router-dom';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport NavbarContainer from './components/Navbar/NavbarContainer';\nimport HeaderConteiner from './components/Header/HeaderConteiner';\nimport Login from './components/Login/Login';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Initialize } from './redux/AppReducer';\nimport Preloader from './components/Common/Preloader/Preloader';\n\nclass AppMain extends React.Component {\n\n  componentDidMount() {\n    this.props.Initialize()\n  }\n\n  render() {\n    if (!this.props.isInitialazed) {\n      return <Preloader />\n    }\n    else {\n      return (\n        <div className=\"App\">\n          <HeaderConteiner />\n          <NavbarContainer />\n          <Routes>\n            <Route path='/login' element={<Login />}/>\n            <Route path='profile/' element={<ProfileContainer />}/>\n            <Route path='profile/:userId' element={<ProfileContainer />}/>\n            <Route path='/dialogs/*' element={<DialogsContainer />}/>\n            <Route path='/users/*' element={<UsersContainer />}/>\n            <Route path='/news' element={<News/>}/>\n            <Route path='/music' element={<Music/>}/>\n            <Route path='/settings' element={<Settings/>}/>\n          </Routes>\n        </div>\n      )\n    }\n  }\n}\n\nfunction MapStateToProps(state) {\n  return {\n    isInitialazed: state.App.initialize.isInitialazed\n  }\n}\n\nlet App = connect(MapStateToProps, {Initialize})(AppMain)\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport DialogReducer from './DialogReducer';\nimport ProfileReducer from './ProfileReducer';\nimport UsersReducer from './UsersReducer';\nimport AuthReducer from './AuthReducer';\nimport thunk from 'redux-thunk';\nimport AppReducer from './AppReducer';\nimport UrlReducer from './UrlReducer';\n\nlet reducers = combineReducers({\n    ProfilePage: ProfileReducer,\n    DialogPage: DialogReducer,\n    UsersPage: UsersReducer,\n    Auth: AuthReducer,\n    App: AppReducer,\n    Url: UrlReducer\n})\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport store from './redux/redux-store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App state = {store.getState()} dispatch={store.dispatch.bind(store)}/>\n      </Provider>\n    </BrowserRouter>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}
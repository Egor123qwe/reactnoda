{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","HOC/withRedirect.jsx","components/Dialogs/Dialogs.module.css"],"names":["module","exports","active","item","MyMassage","NotMyMassage","CssClass","select","isActive","s","DialogItem","props","react_default","a","createElement","react_router_dom","className","to","id","NickName","Message","message","validate","values","errors","lengthEmailControl","lengthControl","MessageText","AddMessageForm","formik","useFormik","initialValues","onSubmit","SendMessage","handleSubmit","error","type","onChange","handleChange","value","errorMessage","submitButton","Dialogs","MessageElements","DialogPage","MessageData","map","e","Message_Message","DialogItemElements","DialogItemData","DialogItem_DialogItem","dialogs","dialogItems","massages","Dialogs_AddMessageForm","DialogsContainer","compose","connect","state","WithRedirect","react_redux__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","Component","isAuth","Auth"],"mappings":"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","file":"static/js/4.dcebb2a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"DialogItem_active__3pw6G\",\"item\":\"DialogItem_item__1yyqI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyMassage\":\"Message_MyMassage__BvnZO\",\"NotMyMassage\":\"Message_NotMyMassage__mffrV\"};","import s from './DialogItem.module.css';\nimport { NavLink } from 'react-router-dom';\nimport React from 'react';\n\nlet CssClass = () => {\n\treturn (\n\t\tselect => select.isActive ? s.active : s.item\n\t);\n}\n\nfunction DialogItem(props) {\n\treturn (\n\t\t<div><NavLink className={CssClass()} to={\"/dialogs/\" + props.id}>{props.NickName}</NavLink></div>\n\t  );\n}\n\nexport default DialogItem;","import s from './Message.module.css';\nimport React from 'react';\n\nfunction isMyMessage(id) {\n    if (id === '1'){\n        return s.MyMassage;\n    }\n    else {\n        return s.NotMyMassage;\n    }\n}\n\nfunction Message(props) {\n\treturn (\n\t\t<div className={isMyMessage(props.id)}>{props.message}</div>\n\t  );\n}\n\nexport default Message;","import s from './Dialogs.module.css';\nimport React from 'react';\nimport { lengthControl } from '../../utils/TextAreaUtils';\nimport { useFormik } from 'formik';\n\n\nconst validate = values => {\n    const errors = {};\n\n    let lengthEmailControl = lengthControl(40)\n    if (lengthEmailControl(values.MessageText)) { errors.MessageText = lengthEmailControl(values.MessageText) }\n  \n    return errors;\n};\n\n\nconst AddMessageForm = (props) => {\n\n    const formik = useFormik({\n        initialValues: {\n            MessageText: '',\n        },\n        validate,\n        onSubmit: values => {\n            props.SendMessage(values.MessageText)\n            values.MessageText = ''\n        },\n    });\n\n    return (\n        <form className={s.AddMessageForm} onSubmit={formik.handleSubmit}>\n            <div className={s.MessageText}>\n                <span className={formik.errors.MessageText ? s.error : s.MessageText}><input id='MessageText' type=\"MessageText\" onChange={formik.handleChange} value={formik.values.MessageText}/></span>\n                {formik.errors.MessageText ? <div className={s.errorMessage}>{formik.errors.MessageText}</div> : null}\n            </div>\n            <button className={s.submitButton} type=\"submit\">Send message</button>\n        </form>\n    );\n};\n\nexport default AddMessageForm;","import s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport React from 'react';\nimport AddMessageForm from './AddMessageForm';\n\n\nfunction Dialogs(props) {\n\t\n\tlet MessageElements = props.DialogPage.MessageData.map( e => <Message message = {e.message} id={e.id} />);\n\tlet DialogItemElements = props.DialogPage.DialogItemData.map(e => <DialogItem NickName={e.NickName} id={e.id}/>)\n\n\treturn (\n\t\t<div className={s.dialogs}>\n\t\t\t<div className= {s.dialogItems}>\n\t\t\t\t{DialogItemElements}\n\t\t\t</div>\n\t\t\t<div className={s.massages}>\n\t\t\t\t{MessageElements}\n\t\t\t\t<AddMessageForm SendMessage={props.SendMessage}/>\n\t\t\t</div>\n\t\t</div>\n\t  );\n}\n\nexport default Dialogs;","import Dialogs from './Dialogs'\nimport { SendMessage } from '../../redux/DialogReducer';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport WithRedirect from '../../HOC/withRedirect';\n\n\nlet mapStateToProps = (state) => {\n\treturn { \n\t\tDialogPage : state.DialogPage,\n\t}\n}\n\nlet DialogsContainer = compose(\n\tconnect(mapStateToProps, {SendMessage}),\n\tWithRedirect\n)(Dialogs)\n\nexport default DialogsContainer;","import { connect } from 'react-redux';\nimport React from \"react\";\nimport { Navigate } from 'react-router-dom';\n\nfunction WithRedirect(Component) {\n    function ComponentWithRouter(props) {\n        if(!props.isAuth) {\n            return <Navigate to='/login' />\n        }\n        else {\n            return <Component {...props}/>\n        }\n    }\n\n    function MapStateToProps(state) {\n        return {\n            isAuth : state.Auth.Auth.isAuth\n        }\n    }\n\n    let ComponentWithRouterProps = connect(MapStateToProps)(ComponentWithRouter)\n\n    return ComponentWithRouterProps\n}\n\nexport default WithRedirect","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3VATK\",\"dialogItems\":\"Dialogs_dialogItems__3DCOo\",\"massages\":\"Dialogs_massages__aDW9g\",\"errorMessage\":\"Dialogs_errorMessage__-1HlE\",\"error\":\"Dialogs_error__31NYO\"};"],"sourceRoot":""}
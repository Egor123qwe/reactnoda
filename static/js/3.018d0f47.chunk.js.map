{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/UserImage/UserImage.jsx","components/Profile/ProfileInfo/Status/StatuHook.jsx","components/Profile/ProfileInfo/ProfileInfoForm/ProfileInfoForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","HOC/withRouter.jsx","components/Profile/ProfileInfo/ProfileInfoContainer.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostConteiner.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","HOC/withRedirect.jsx","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","profile","item","ProfileImage","props","_useState","useState","_useState2","Object","slicedToArray","SetProfileImage","useEffect","ProfilePhoto","react_default","a","createElement","className","s","ProfileInfo","alt","src","UserId","String","MyId","onChange","e","SetProfileImageThunk","target","files","OnSelectPhoto","type","Fragment","Status","EditMode","SetEditMode","_useState3","status","_useState4","SetStatus","currentTarget","value","autoFocus","onBlur","UpdateStatus","onDoubleClick","ProfileInfoForm","StateSkeleton","FullName","ProfileInfoData","lookingForAJob","LookingForAJobDescription","lookingForAJobDescription","AboutMe","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","formik","useFormik","initialValues","validate","values","errors","lengthMidleControl","lengthControl","onSubmit","submitProps","SetProfileInfoThunk","setStatus","then","responce","data","resultCode","setValues","objectSpread","LoginForm","handleSubmit","info","ProfileInfoDescItem","onClick","id","handleChange","errorMessage","StatuHook","defaultChecked","ProfileInfoItem","Contacts","href","rel","error","Preloader","UserImage","ProfileInfoForm_ProfileInfoForm","withRouter","Component","location","useLocation","navigate","useNavigate","params","useParams","assign","router","ProfileInfoAPI","this","GetUserThunk","userId","GetStatus","PrevProps","UrlId","ProfileInfo_ProfileInfo","React","ProfileinfoContainer","connect","state","ProfilePage","Auth","Url","UserIdInURL","Post","text","lengthEmailControl","PostText","AddPostForm","AddPost","name","submitButton","MyPosts","PostsElement","PostsData","map","Post_Post","Addposts","MyPosts_AddPostForm","posts","MyPostConteiner","Profile","ProfileInfoContainer","MyPosts_MyPostConteiner","compose","WithRedirect","Profile_Profile","description","react_redux__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","isAuth","to","textarea"],"mappings":"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","file":"static/js/3.018d0f47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1ni5C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3xHLe\"};","import s from '../ProfileInfo.module.css'\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction ProfileImage(props) {\n\n    let [ProfileImage, SetProfileImage] = useState('')\n\n    function OnSelectPhoto(e) {\n        props.SetProfileImageThunk(e.target.files[0])\n    }\n\n    useEffect(() => {\n        SetProfileImage(props.ProfilePhoto)\n    }, [props.ProfilePhoto])\n\n    return (\n        <div className={s.ProfileInfo}>\n            <img alt='' src={ProfileImage} />\n            { (props.UserId === String(props.MyId)) ? \n                <div>\n                    <input onChange={(e) => OnSelectPhoto(e)} type=\"file\"/>\n                </div>\n             : <></>}\n        </div>\n      );\n}\n\nexport default ProfileImage;","import s from '../ProfileInfo.module.css'\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\nfunction Status(props) {\n\n    let [EditMode, SetEditMode] = useState(false)\n    let [Status, SetStatus] = useState(props.status)\n\n    function DisableEdit() {\n        SetEditMode(false)\n        props.UpdateStatus(Status)\n    }\n    function EnableEdit() {\n        if (props.UserId === String(props.MyId)) {\n            SetEditMode(true)\n        }\n    }\n\n    useEffect(() => { SetStatus(props.status) }, [props.status])\n\n    function OnChange(e) {\n        SetStatus(e.currentTarget.value)\n    }\n\n        return (\n            <div className={s.status}>\n                {\n                    EditMode ? \n                        <input onChange={OnChange} autoFocus={true} onBlur={DisableEdit} value={Status}></input> : \n                        <span onDoubleClick={EnableEdit}>{Status ? Status : '-----'}</span>\n                }\n            </div>\n        )\n}\n\nexport default Status;","import s from '../ProfileInfo.module.css'\nimport Status from '../Status/StatuHook';\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { lengthControl } from '../../../../utils/TextAreaUtils';\n\nfunction ProfileInfoForm(props) {\n\n    let [EditMode, SetEditMode] = useState(false)\n\n    function OnEnableMode() {\n        SetEditMode(true)\n    }\n\n    let StateSkeleton = {\n        FullName: props.ProfileInfoData.FullName,\n        lookingForAJob: props.ProfileInfoData.lookingForAJob,\n        LookingForAJobDescription: props.ProfileInfoData.lookingForAJobDescription,\n        AboutMe: props.ProfileInfoData.AboutMe,\n        contacts: {\n            github: props.ProfileInfoData.contacts.github,\n            vk: props.ProfileInfoData.contacts.vk,\n            facebook: '',\n            instagram: '',\n            twitter: '',\n            website: '',\n            youtube: '',\n            mainLink: '',\n        }\n    }\n\n    const validate = values => {\n\n        const errors = {};\n    \n        let lengthMidleControl = lengthControl(30)\n        if (lengthMidleControl(values.FullName)) { errors.FullName = lengthMidleControl(values.FullName) }\n        if (lengthMidleControl(values.LookingForAJobDescription)) { errors.LookingForAJobDescription = lengthMidleControl(values.LookingForAJobDescription) }\n        if (lengthMidleControl(values.AboutMe)) { errors.AboutMe = lengthMidleControl(values.AboutMe) }\n        if (lengthMidleControl(values.contacts.github)) { errors.github = lengthMidleControl(values.contacts.github) }\n        if (lengthMidleControl(values.contacts.vk)) { errors.vk = lengthMidleControl(values.contacts.vk) }\n      \n        return errors;\n    };\n\n    const formik = useFormik({\n        initialValues: StateSkeleton,\n        validate,\n        onSubmit: (values, submitProps) => {\n            props.SetProfileInfoThunk(values, props.UserId, submitProps.setStatus).then((responce) => {\n                if (responce.data.resultCode === 0) {\n                    SetEditMode(false)\n                }\n            })\n        },\n    });\n\n    useEffect(() => {\n        formik.setValues(\n            {...StateSkeleton, contacts: {...StateSkeleton.contacts}}\n        )\n    }, [props.ProfileInfoData])\n\n    return (\n            <form className={s.LoginForm} onSubmit={formik.handleSubmit}>\n                <div className={s.info}>\n                    <div className={s.ProfileInfoDescItem}>----------------------------------</div>\n\n                    {( (String(props.MyId) === props.UserId) && (!EditMode) ) ? <button type=\"button\" onClick={ OnEnableMode }>Edit</button> : <></>}\n                    {EditMode ? <button type=\"submit\">Save</button> : <></>}\n\n                    <div className={s.ProfileInfoDescItem}> { \n                            EditMode ?  <span> Name:\n                                            <input id='FullName' type=\"FullName\" onChange={formik.handleChange} value={formik.values.FullName}/>\n                                            {formik.errors.FullName ? <span className={s.errorMessage}> - {formik.errors.FullName}</span> : null}\n                                        </span> : \n                                        <span className={s.FullName}>{formik.values.FullName}</span>\n                        }</div>\n\n                    <Status MyId={props.MyId} UserId={props.UserId} UpdateStatus={props.UpdateStatus} status={props.ProfileInfoData.status} />\n\n                    <div className={s.ProfileInfoDescItem}>----------------------------------</div>\n\n                    <div>\n                        <span className={s.ProfileInfoDescItem}>looking for a job: { \n                            EditMode ?  <span>\n                                            <input id='lookingForAJob' type=\"checkbox\" defaultChecked={formik.values.lookingForAJob} onChange={formik.handleChange} value={formik.values.lookingForAJob}/>\n                                        </span> : \n                                        <span className={s.ProfileInfoItem}>{formik.values.lookingForAJob ? 'yes' : 'no' }</span>\n                        }</span>\n                    </div>\n\n                    <div>\n                        <span className={s.ProfileInfoDescItem}>looking for a job description: { \n                            EditMode ?  <span>\n                                            <input id='LookingForAJobDescription' type=\"LookingForAJobDescription\" onChange={formik.handleChange} value={formik.values.LookingForAJobDescription}/>\n                                            {formik.errors.LookingForAJobDescription ? <span className={s.errorMessage}> - {formik.errors.LookingForAJobDescription}</span> : null}\n                                        </span> : \n                                       <span className={s.ProfileInfoItem}>{formik.values.LookingForAJobDescription}</span>\n                        }</span>\n                    </div>\n\n                    <div>\n                        <span className={s.ProfileInfoDescItem}>About me: { \n                            EditMode ?  <span>\n                                            <input id='AboutMe' type=\"AboutMe\" onChange={formik.handleChange} value={formik.values.AboutMe}/>\n                                            {formik.errors.AboutMe ? <span className={s.errorMessage}> - {formik.errors.AboutMe}</span> : null}\n                                        </span> : \n                                       <span className={s.ProfileInfoItem}>{formik.values.AboutMe}</span>\n                        }</span>\n                    </div>\n\n                    <div className={s.ProfileInfoDescItem}>----------------------------------</div>\n\n                    <div className={s.Contacts}>Contacts: \n\n                        <div>\n                            <span className={s.ProfileInfoDescItem}>Vk: { \n                                EditMode ?  <span>\n                                                <input id='contacts.vk' type=\"Contacts\" onChange={formik.handleChange} value={formik.values.contacts.vk}/>\n                                                {formik.errors.vk ? <span className={s.errorMessage}> - {formik.errors.vk}</span> : null}\n                                            </span> : \n                                        <a href={formik.values.contacts.vk} rel=\"noopener noreferrer\" target=\"_blank\" className={s.ProfileInfoItem}>{formik.values.contacts.vk}</a>\n                            }</span>\n                        </div>\n\n                        <div>\n                            <span className={s.ProfileInfoDescItem}>Git Hub: { \n                                EditMode ?  <span>\n                                                <input id='contacts.github' type=\"Contacts\" onChange={formik.handleChange} value={formik.values.contacts.github}/>\n                                                {formik.errors.github ? <span className={s.errorMessage}> - {formik.errors.github}</span> : null}\n                                            </span> : \n                                        <a href={formik.values.contacts.github} rel=\"noopener noreferrer\" target=\"_blank\" className={s.ProfileInfoItem}>{formik.values.contacts.github}</a>\n                            }</span>\n                        </div>\n                    </div>\n                    <div className={s.errorMessage}>{ formik.status ? formik.status.error : null }</div>\n                    <div className={s.ProfileInfoDescItem}>----------------------------------</div>\n\n                </div>\n            </form>\n      );\n}\n\nexport default ProfileInfoForm;","import s from './ProfileInfo.module.css'\nimport Preloader from '../../Common/Preloader/Preloader';\nimport React from 'react';\nimport ProfileImage from './UserImage/UserImage';\nimport ProfileInfoForm from './ProfileInfoForm/ProfileInfoForm';\n\nfunction ProfileInfo(props) {\n    return (\n        <div className={s.ProfileInfo}>\n            <div className={s.info}>\n                {props.ProfileInfoData.Preloader ? <Preloader/> : <></>}\n                <ProfileImage MyId={props.MyId} UserId={props.UserId} SetProfileImageThunk={props.SetProfileImageThunk} \n                              ProfilePhoto={props.ProfileInfoData.ProfilePhoto}/>\n                <ProfileInfoForm SetProfileInfoThunk={props.SetProfileInfoThunk} ProfileInfoData={props.ProfileInfoData} \n                                 MyId={props.MyId} UserId={props.UserId} UpdateStatus={props.UpdateStatus}/>\n            </div>\n        </div>\n      );\n}\n\nexport default ProfileInfo;","import { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport React from 'react';\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component {...props} router={{ location, navigate, params }} />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n\nexport default withRouter;","import { connect } from 'react-redux';\nimport ProfileInfo from './ProfileInfo';\nimport React from \"react\";\nimport { GetUserThunk, GetStatus, UpdateStatus, SetProfileImageThunk, SetProfileInfoThunk } from '../../../redux/ProfileReducer';\nimport withRouter from '../../../HOC/withRouter';\n\nclass ProfileInfoAPI extends React.Component {\n\n    componentDidMount() {\n        this.props.GetUserThunk( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n        this.props.GetStatus( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n    }\n\n    componentDidUpdate(PrevProps) {\n        if (PrevProps.UrlId !== this.props.UrlId) {\n            this.props.GetUserThunk( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n            this.props.GetStatus( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n        }\n    }\n\n    render() {\n        return (<ProfileInfo MyId={this.props.MyId} UserId={this.props.router.params.userId} \n                             UpdateStatus={this.props.UpdateStatus} ProfileInfoData={this.props.ProfileInfoData}\n                             SetProfileImageThunk={this.props.SetProfileImageThunk} SetProfileInfoThunk={this.props.SetProfileInfoThunk}/>)\n    }\n} \n\nfunction MapStateToProps(state) {\n    return {\n        ProfileInfoData: state.ProfilePage.ProfileInfoData,\n        MyId: state.Auth.Auth.id,\n        UrlId: state.Url.UserIdInURL.id,\n    }\n}\n\nlet ProfileinfoContainer = connect(MapStateToProps, { GetUserThunk, GetStatus, UpdateStatus, SetProfileImageThunk, SetProfileInfoThunk })(withRouter(ProfileInfoAPI))\n\nexport default ProfileinfoContainer","import s from './Post.module.css';\nimport React from 'react';\n\nfunction Post(props) {\n    return (\n        <div className={s.item}>\n            <img alt='' src=\"https://i.pinimg.com/736x/18/ca/6f/18ca6f28ec97d6afb3117d4b6aece2e6.jpg\"/>\n            {props.text}\n        </div>\n      );\n}\n\nexport default Post;","import s from './MyPosts.module.css';\nimport React from 'react';\nimport { lengthControl } from '../../../utils/TextAreaUtils';\nimport { useFormik } from 'formik';\n\n\nconst validate = values => {\n    const errors = {};\n\n    let lengthEmailControl = lengthControl(40)\n    if (lengthEmailControl(values.PostText)) { errors.PostText = lengthEmailControl(values.PostText) }\n  \n    return errors;\n};\n\n\nconst AddPostForm = (props) => {\n\n    const formik = useFormik({\n        initialValues: {\n            PostText: '',\n        },\n        validate,\n        onSubmit: values => {\n            props.AddPost(values.PostText)\n            values.PostText = ''\n        },\n    });\n\n    return (\n        <form className={s.AddPostForm} onSubmit={formik.handleSubmit}>\n            <div className={s.AddPost}>\n                <span className={formik.errors.PostText ? s.error : s.PostText}><input name=\"PostText\" id='PostText' type=\"PostText\" onChange={formik.handleChange} value={formik.values.PostText}/></span>\n                {formik.errors.PostText ? <div className={s.errorMessage}>{formik.errors.PostText}</div> : null}\n            </div>\n            <button className={s.submitButton} type=\"submit\">Add Post</button>\n        </form>\n    );\n};\n\nexport default AddPostForm;","import s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport React from 'react';\nimport AddPostForm from './AddPostForm';\n\n\nfunction MyPosts(props) {\n\n    let PostsElement = props.ProfilePage.PostsData.map( e => <Post text={e.text} id={e.id}/>)\n\n    return (\n        <div className={s.MyPosts}>\n            <div className={s.Addposts}>\n                <AddPostForm AddPost={props.AddPost}/>\n            </div>\n            <div className={s.posts}>\n                {PostsElement}\n            </div>\n            \n        </div>\n      );\n}\n\nexport default MyPosts;","import { AddPost } from '../../../redux/ProfileReducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToProps = (state) => {\n\treturn { \n\t\tProfilePage : state.ProfilePage \n\t}\n}\n\nlet MyPostConteiner = connect(mapStateToProps, {AddPost})(MyPosts);\n\nexport default MyPostConteiner;\n\n","import s from './Profile.module.css';\nimport ProfileinfoContainer from './ProfileInfo/ProfileInfoContainer';\nimport MyPostConteiner from './MyPosts/MyPostConteiner';\nimport React from 'react';\n\n\nfunction Profile(props) {\n    return (\n        <div className={s.profile}>\n            <ProfileinfoContainer />\n            <MyPostConteiner />\n        </div>\n      );\n}\n\n\nexport default Profile","import React from 'react';\nimport { compose } from 'redux';\nimport Profile from './Profile';\nimport WithRedirect from '../../HOC/withRedirect';\nimport withRouter from '../../HOC/withRouter';\nimport { connect } from 'react-redux';\n\n\nfunction ProfileContainer() {\n\n    return (\n        <Profile />\n      );\n}\n\nfunction MapStateToProps(state) {\n  return {}  \n}\n\nexport default compose(WithRedirect, connect(MapStateToProps, {}))(withRouter(ProfileContainer))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__3mJj3\",\"info\":\"ProfileInfo_info__2VCz4\",\"FullName\":\"ProfileInfo_FullName__1NqQd\",\"status\":\"ProfileInfo_status__39MEO\",\"description\":\"ProfileInfo_description__1F5b4\",\"ProfileInfoDescItem\":\"ProfileInfo_ProfileInfoDescItem__2FNo8\",\"Contacts\":\"ProfileInfo_Contacts__3-Eik\",\"ProfileInfoItem\":\"ProfileInfo_ProfileInfoItem__2CpYo\",\"errorMessage\":\"ProfileInfo_errorMessage__2Kn8D\"};","import { connect } from 'react-redux';\nimport React from \"react\";\nimport { Navigate } from 'react-router-dom';\n\nfunction WithRedirect(Component) {\n    function ComponentWithRouter(props) {\n        if(!props.isAuth) {\n            return <Navigate to='/login' />\n        }\n        else {\n            return <Component {...props}/>\n        }\n    }\n\n    function MapStateToProps(state) {\n        return {\n            isAuth : state.Auth.Auth.isAuth\n        }\n    }\n\n    let ComponentWithRouterProps = connect(MapStateToProps)(ComponentWithRouter)\n\n    return ComponentWithRouterProps\n}\n\nexport default WithRedirect","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"MyPosts_textarea__3JGmV\",\"errorMessage\":\"MyPosts_errorMessage__1Zvkv\",\"error\":\"MyPosts_error__2jqp2\"};"],"sourceRoot":""}
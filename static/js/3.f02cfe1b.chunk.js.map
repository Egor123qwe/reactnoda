{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/UserImage/UserImage.jsx","components/Profile/ProfileInfo/Status/StatuHook.jsx","components/Profile/ProfileInfo/ProfileInfoForm/ProfileInfoForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","HOC/withRouter.jsx","components/Profile/ProfileInfo/ProfileInfoContainer.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostConteiner.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","HOC/withRedirect.jsx","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","profile","item","ProfileImage","props","_useState","useState","_useState2","Object","slicedToArray","SetProfileImage","useEffect","ProfilePhoto","react_default","a","createElement","className","s","ProfileInfo","alt","src","UserId","String","MyId","onChange","e","SetProfileImageThunk","target","files","OnSelectPhoto","type","Fragment","Status","EditMode","SetEditMode","_useState3","status","_useState4","SetStatus","currentTarget","value","autoFocus","onBlur","UpdateStatus","onDoubleClick","ProfileInfoForm","StateSkeleton","FullName","ProfileInfoData","lookingForAJob","LookingForAJobDescription","lookingForAJobDescription","AboutMe","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","formik","useFormik","initialValues","onSubmit","values","SetProfileInfoThunk","setFormikState","LoginForm","handleSubmit","info","ProfileInfoDescItem","onClick","id","handleChange","StatuHook","ProfileInfoItem","Contacts","Preloader","UserImage","ProfileInfoForm_ProfileInfoForm","withRouter","Component","location","useLocation","navigate","useNavigate","params","useParams","assign","router","ProfileInfoAPI","this","GetUserThunk","userId","GetStatus","PrevProps","UrlId","ProfileInfo_ProfileInfo","React","ProfileinfoContainer","connect","state","ProfilePage","Auth","Url","UserIdInURL","Post","text","validate","errors","lengthEmailControl","lengthControl","PostText","AddPostForm","AddPost","error","name","errorMessage","submitButton","MyPosts","PostsElement","PostsData","map","Post_Post","Addposts","MyPosts_AddPostForm","posts","MyPostConteiner","Profile","ProfileInfoContainer","MyPosts_MyPostConteiner","compose","WithRedirect","Profile_Profile","description","react_redux__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","isAuth","to","textarea"],"mappings":"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","file":"static/js/3.f02cfe1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1ni5C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3xHLe\"};","import s from '../ProfileInfo.module.css'\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction ProfileImage(props) {\n\n    let [ProfileImage, SetProfileImage] = useState('')\n\n    function OnSelectPhoto(e) {\n        props.SetProfileImageThunk(e.target.files[0])\n    }\n\n    useEffect(() => {\n        SetProfileImage(props.ProfilePhoto)\n    }, [props.ProfilePhoto])\n\n    return (\n        <div className={s.ProfileInfo}>\n            <img alt='' src={ProfileImage} />\n            { (props.UserId === String(props.MyId)) ? \n                <div>\n                    <input onChange={(e) => OnSelectPhoto(e)} type=\"file\"/>\n                </div>\n             : <></>}\n        </div>\n      );\n}\n\nexport default ProfileImage;","import s from '../ProfileInfo.module.css'\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\nfunction Status(props) {\n\n    let [EditMode, SetEditMode] = useState(false)\n    let [Status, SetStatus] = useState(props.status)\n\n    function DisableEdit() {\n        SetEditMode(false)\n        props.UpdateStatus(Status)\n    }\n    function EnableEdit() {\n        if (props.UserId === String(props.MyId)) {\n            SetEditMode(true)\n        }\n    }\n\n    useEffect(() => { SetStatus(props.status) }, [props.status])\n\n    function OnChange(e) {\n        SetStatus(e.currentTarget.value)\n    }\n\n        return (\n            <div className={s.status}>\n                {\n                    EditMode ? \n                        <input onChange={OnChange} autoFocus={true} onBlur={DisableEdit} value={Status}></input> : \n                        <span onDoubleClick={EnableEdit}>{Status ? Status : '-----'}</span>\n                }\n            </div>\n        )\n}\n\nexport default Status;","import s from '../ProfileInfo.module.css'\nimport Status from '../Status/StatuHook';\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction ProfileInfoForm(props) {\n\n    let [EditMode, SetEditMode] = useState(false)\n\n    function OnEnableMode() {\n        SetEditMode(true)\n    }\n\n    let StateSkeleton = {\n        FullName: props.ProfileInfoData.FullName,\n        lookingForAJob: props.ProfileInfoData.lookingForAJob,\n        LookingForAJobDescription: props.ProfileInfoData.lookingForAJobDescription,\n        AboutMe: props.ProfileInfoData.AboutMe,\n        contacts: {\n            github: props.ProfileInfoData.contacts.github,\n            vk: props.ProfileInfoData.contacts.vk,\n            facebook: '',\n            instagram: '',\n            twitter: '',\n            website: '',\n            youtube: '',\n            mainLink: '',\n        }\n    }\n\n    const formik = useFormik({\n        initialValues: StateSkeleton,\n        onSubmit: (values) => {\n            SetEditMode(false)\n            props.SetProfileInfoThunk(values)\n        },\n    });\n\n    useEffect(() => {\n        formik.setFormikState({\n            values: StateSkeleton\n        })\n    }, [props.ProfileInfoData])\n\n    return (\n            <form className={s.LoginForm} onSubmit={formik.handleSubmit}>\n                <div className={s.info}>\n                    <div className={s.ProfileInfoDescItem}>----------------------------------</div>\n                    {!EditMode ? <button type=\"button\" onClick={ OnEnableMode }>Edit</button> : <></>}\n                    {EditMode ? <button type=\"submit\">Save</button> : <></>}\n\n                    { EditMode ? \n                        <div><span className={s.ProfileInfoDescItem}>Name: <input id='FullName' type=\"FullName\" onChange={formik.handleChange} value={formik.values.FullName}/></span></div> : \n                        <div className={s.FullName}><span>{formik.values.FullName}</span></div>}\n\n                    <Status MyId={props.MyId} UserId={props.UserId} UpdateStatus={props.UpdateStatus} status={props.ProfileInfoData.status} />\n\n                    <div className={s.ProfileInfoDescItem}>----------------------------------</div>\n\n                    <div>\n                        <span className={s.ProfileInfoDescItem}>looking for a job: { \n                            EditMode ? <input id='lookingForAJob' type=\"checkbox\" onChange={formik.handleChange} value={formik.values.lookingForAJob}/> : \n                                       <span className={s.ProfileInfoItem}>{formik.values.lookingForAJob ? 'yes' : 'no' }</span>\n                        }</span>\n                    </div>\n\n                    <div>\n                        <span className={s.ProfileInfoDescItem}>looking for a job description: { \n                            EditMode ? <input id='LookingForAJobDescription' type=\"LookingForAJobDescription\" onChange={formik.handleChange} value={formik.values.LookingForAJobDescription}/> : \n                                       <span className={s.ProfileInfoItem}>{formik.values.LookingForAJobDescription}</span>\n                        }</span>\n                    </div>\n\n                    <div>\n                        <span className={s.ProfileInfoDescItem}>About me: { \n                            EditMode ? <input id='AboutMe' type=\"AboutMe\" onChange={formik.handleChange} value={formik.values.AboutMe}/> : \n                                       <span className={s.ProfileInfoItem}>{formik.values.AboutMe}</span>\n                        }</span>\n                    </div>\n\n                    <div className={s.ProfileInfoDescItem}>----------------------------------</div>\n\n                    <div className={s.Contacts}>Contacts: \n\n                        <div>\n                            <span className={s.ProfileInfoDescItem}>Vk: { \n                                EditMode ? <input id='contacts.vk' type=\"Contacts\" onChange={formik.handleChange} value={formik.values.contacts.vk}/> : \n                                        <span className={s.ProfileInfoItem}>{formik.values.contacts.vk}</span>\n                            }</span>\n                        </div>\n\n                        <div>\n                            <span className={s.ProfileInfoDescItem}>Git Hub: { \n                                EditMode ? <input id='contacts.github' type=\"Contacts\" onChange={formik.handleChange} value={formik.values.contacts.github}/> : \n                                        <span className={s.ProfileInfoItem}>{formik.values.contacts.github}</span>\n                            }</span>\n                        </div>\n                    </div>\n                    <div className={s.ProfileInfoDescItem}>----------------------------------</div>\n\n                </div>\n            </form>\n      );\n}\n\nexport default ProfileInfoForm;","import s from './ProfileInfo.module.css'\nimport Preloader from '../../Common/Preloader/Preloader';\nimport React from 'react';\nimport ProfileImage from './UserImage/UserImage';\nimport ProfileInfoForm from './ProfileInfoForm/ProfileInfoForm';\n\nfunction ProfileInfo(props) {\n    return (\n        <div className={s.ProfileInfo}>\n            <div className={s.info}>\n                {props.ProfileInfoData.Preloader ? <Preloader/> : <></>}\n                <ProfileImage MyId={props.MyId} UserId={props.UserId} SetProfileImageThunk={props.SetProfileImageThunk} \n                              ProfilePhoto={props.ProfileInfoData.ProfilePhoto}/>\n                <ProfileInfoForm SetProfileInfoThunk={props.SetProfileInfoThunk} ProfileInfoData={props.ProfileInfoData} \n                                 MyId={props.MyId} UserId={props.UserId} UpdateStatus={props.UpdateStatus}/>\n            </div>\n        </div>\n      );\n}\n\nexport default ProfileInfo;","import { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport React from 'react';\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component {...props} router={{ location, navigate, params }} />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n\nexport default withRouter;","import { connect } from 'react-redux';\nimport ProfileInfo from './ProfileInfo';\nimport React from \"react\";\nimport { GetUserThunk, GetStatus, UpdateStatus, SetProfileImageThunk, SetProfileInfoThunk } from '../../../redux/ProfileReducer';\nimport withRouter from '../../../HOC/withRouter';\n\nclass ProfileInfoAPI extends React.Component {\n\n    componentDidMount() {\n        this.props.GetUserThunk( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n        this.props.GetStatus( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n    }\n\n    componentDidUpdate(PrevProps) {\n        if (PrevProps.UrlId !== this.props.UrlId) {\n            this.props.GetUserThunk( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n            this.props.GetStatus( this.props.router.params.userId ? this.props.router.params.userId : this.props.MyId )\n        }\n    }\n\n    render() {\n        return (<ProfileInfo MyId={this.props.MyId} UserId={this.props.router.params.userId} \n                             UpdateStatus={this.props.UpdateStatus} ProfileInfoData={this.props.ProfileInfoData}\n                             SetProfileImageThunk={this.props.SetProfileImageThunk} SetProfileInfoThunk={this.props.SetProfileInfoThunk}/>)\n    }\n} \n\nfunction MapStateToProps(state) {\n    return {\n        ProfileInfoData: state.ProfilePage.ProfileInfoData,\n        MyId: state.Auth.Auth.id,\n        UrlId: state.Url.UserIdInURL.id,\n    }\n}\n\nlet ProfileinfoContainer = connect(MapStateToProps, { GetUserThunk, GetStatus, UpdateStatus, SetProfileImageThunk, SetProfileInfoThunk })(withRouter(ProfileInfoAPI))\n\nexport default ProfileinfoContainer","import s from './Post.module.css';\nimport React from 'react';\n\nfunction Post(props) {\n    return (\n        <div className={s.item}>\n            <img alt='' src=\"https://i.pinimg.com/736x/18/ca/6f/18ca6f28ec97d6afb3117d4b6aece2e6.jpg\"/>\n            {props.text}\n        </div>\n      );\n}\n\nexport default Post;","import s from './MyPosts.module.css';\nimport React from 'react';\nimport { lengthControl } from '../../../utils/TextAreaUtils';\nimport { useFormik } from 'formik';\n\n\nconst validate = values => {\n    const errors = {};\n\n    let lengthEmailControl = lengthControl(40)\n    if (lengthEmailControl(values.PostText)) { errors.PostText = lengthEmailControl(values.PostText) }\n  \n    return errors;\n};\n\n\nconst AddPostForm = (props) => {\n\n    const formik = useFormik({\n        initialValues: {\n            PostText: '',\n        },\n        validate,\n        onSubmit: values => {\n            props.AddPost(values.PostText)\n            values.PostText = ''\n        },\n    });\n\n    return (\n        <form className={s.AddPostForm} onSubmit={formik.handleSubmit}>\n            <div className={s.AddPost}>\n                <span className={formik.errors.PostText ? s.error : s.PostText}><input name=\"PostText\" id='PostText' type=\"PostText\" onChange={formik.handleChange} value={formik.values.PostText}/></span>\n                {formik.errors.PostText ? <div className={s.errorMessage}>{formik.errors.PostText}</div> : null}\n            </div>\n            <button className={s.submitButton} type=\"submit\">Add Post</button>\n        </form>\n    );\n};\n\nexport default AddPostForm;","import s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport React from 'react';\nimport AddPostForm from './AddPostForm';\n\n\nfunction MyPosts(props) {\n\n    let PostsElement = props.ProfilePage.PostsData.map( e => <Post text={e.text} id={e.id}/>)\n\n    return (\n        <div className={s.MyPosts}>\n            <div className={s.Addposts}>\n                <AddPostForm AddPost={props.AddPost}/>\n            </div>\n            <div className={s.posts}>\n                {PostsElement}\n            </div>\n            \n        </div>\n      );\n}\n\nexport default MyPosts;","import { AddPost } from '../../../redux/ProfileReducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToProps = (state) => {\n\treturn { \n\t\tProfilePage : state.ProfilePage \n\t}\n}\n\nlet MyPostConteiner = connect(mapStateToProps, {AddPost})(MyPosts);\n\nexport default MyPostConteiner;\n\n","import s from './Profile.module.css';\nimport ProfileinfoContainer from './ProfileInfo/ProfileInfoContainer';\nimport MyPostConteiner from './MyPosts/MyPostConteiner';\nimport React from 'react';\n\n\nfunction Profile(props) {\n    return (\n        <div className={s.profile}>\n            <ProfileinfoContainer />\n            <MyPostConteiner />\n        </div>\n      );\n}\n\n\nexport default Profile","import React from 'react';\nimport { compose } from 'redux';\nimport Profile from './Profile';\nimport WithRedirect from '../../HOC/withRedirect';\nimport withRouter from '../../HOC/withRouter';\nimport { connect } from 'react-redux';\n\n\nfunction ProfileContainer() {\n\n    return (\n        <Profile />\n      );\n}\n\nfunction MapStateToProps(state) {\n  return {}  \n}\n\nexport default compose(WithRedirect, connect(MapStateToProps, {}))(withRouter(ProfileContainer))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__3mJj3\",\"info\":\"ProfileInfo_info__2VCz4\",\"FullName\":\"ProfileInfo_FullName__1NqQd\",\"status\":\"ProfileInfo_status__39MEO\",\"description\":\"ProfileInfo_description__1F5b4\",\"ProfileInfoDescItem\":\"ProfileInfo_ProfileInfoDescItem__2FNo8\",\"Contacts\":\"ProfileInfo_Contacts__3-Eik\",\"ProfileInfoItem\":\"ProfileInfo_ProfileInfoItem__2CpYo\"};","import { connect } from 'react-redux';\nimport React from \"react\";\nimport { Navigate } from 'react-router-dom';\n\nfunction WithRedirect(Component) {\n    function ComponentWithRouter(props) {\n        if(!props.isAuth) {\n            return <Navigate to='/login' />\n        }\n        else {\n            return <Component {...props}/>\n        }\n    }\n\n    function MapStateToProps(state) {\n        return {\n            isAuth : state.Auth.Auth.isAuth\n        }\n    }\n\n    let ComponentWithRouterProps = connect(MapStateToProps)(ComponentWithRouter)\n\n    return ComponentWithRouterProps\n}\n\nexport default WithRedirect","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"MyPosts_textarea__3JGmV\",\"errorMessage\":\"MyPosts_errorMessage__1Zvkv\",\"error\":\"MyPosts_error__2jqp2\"};"],"sourceRoot":""}